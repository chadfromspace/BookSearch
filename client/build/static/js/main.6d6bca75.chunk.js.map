{"version":3,"sources":["components/Navbar/index.js","components/BookCard/index.js","components/Search/index.js","components/Saved/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Component","BookCard","state","react_default","a","createElement","className","Card","key","this","props","id","Header","name","Body","alt","description","src","image","Text","authors","href","link","Button","variant","Search","input","results","handleInputChange","event","value","target","_this","setState","handleFormSubmit","preventDefault","searchResults","axios","get","form","then","res","push","data","items","console","log","onChange","type","placeholder","onClick","img","deployedURL","repositoryURL","map","index","components_BookCard","Saved","App","react_router_dom","to","react_router","path","components_Search","components_Saved","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6d6bca75.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass Navbar extends Component {\n  state = {};\n\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div>\n          <navbar className=\"nav\">\n              <h4 className=\"mr-4 brand\">\n              Google Books\n              </h4>\n              <div className=\"search\">Search</div>\n              <div className=\"saved\">Saved</div>\n          </navbar>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nclass BookCard extends Component {\n  state = {\n  };\n\n  render() {\n    return (\n      <div className=\"row content\">\n        <div className=\"col-6 mt-2 mb-2\">\n            <Card className=\"text-center projectCard\" key={this.props.id}>\n              <Card.Header>{this.props.name}</Card.Header>\n              <Card.Body>\n                   <img alt={this.props.description} src={this.props.image}></img>\n                   <Card.Text>\n                        {this.props.description}\n                   </Card.Text>\n                   <Card.Text>\n                       {this.props.authors}\n                  </Card.Text>\n                   <a href={this.props.link}>\n                        <Button variant=\"primary\">View On Website</Button>\n                   </a>\n              </Card.Body>\n            </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BookCard;","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport BookCard from \"../BookCard\";\n\nclass Search extends Component {\n  state = {\n    input: \"\",\n    results: []\n  };\n\n  componentDidMount(){\n  }\n\n  handleInputChange = event => {\n      let value = event.target.value;\n      this.setState({\n        input: value\n      });\n  };\n\n  handleFormSubmit = event => {\n  event.preventDefault();\n  var searchResults = [];\n    axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\"+event.target.form[0].value)\n      .then(res => {\n        searchResults.push(res.data.items);\n      })\n        this.setState({\n            results: searchResults\n        })\n        console.log(searchResults);\n}\n\n  render(){\n    return (\n      <div className=\"row content\">\n\n            <Card className=\"text-center projectCard\" key={this.props.id}>\n              <Card.Header>\n                <form className=\"form\">\n                  <input\n                    onChange={this.handleInputChange}\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    value={this.state.input}\n                  />\n                  <button className=\"searchButton\" onClick={this.handleFormSubmit}>Submit</button>\n                </form>\n              </Card.Header>\n              <Card.Body>\n               <img alt={this.props.description} src={this.props.img}></img>\n               <Card.Text>\n                    {this.props.description}\n               </Card.Text>\n               <a href={this.props.deployedURL}>\n                    <Button className=\"mr-2\" variant=\"primary\">View</Button>\n               </a>\n               <a href={this.props.repositoryURL}>\n                    <Button variant=\"primary\">Save</Button>\n               </a>\n              </Card.Body>\n            </Card>\n                        <div>\n                        {this.state.results.map((a,index)=>(\n                            <BookCard key={index}\n                            name={a.name}\n                            description={a.description}\n                            deployedURL={a.deployedURL}\n                            repositoryURL={a.repositoryURL}\n                            img={a.img}/>\n                         ))}\n                         </div>\n      </div>\n    )\n  }\n}\n\nexport default Search;","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nclass Saved extends Component {\n  state = {};\n\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div className=\"row content\">\n          <div className=\"col-6 mt-2 mb-2\">\n            <Card className=\"text-center projectCard\" key={this.props.id}>\n              <Card.Header>{this.props.name}</Card.Header>\n              <Card.Body>\n                   <img alt={this.props.description} src={this.props.img}></img>\n                   <Card.Text>\n                        {this.props.description}\n                   </Card.Text>\n                   <a href={this.props.deployedURL}>\n                        <Button className=\"mr-2\" variant=\"primary\">View</Button>\n                   </a>\n                   <a href={this.props.repositoryURL}>\n                        <Button variant=\"primary\">Delete</Button>\n                   </a>\n              </Card.Body>\n            </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Saved;","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport Search from \"./components/Search\";\nimport Saved from \"./components/Saved\";\nimport {\nBrowserRouter as Router,\nLink,\nSwitch,\nRoute\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/search\">Search</Link>\n            </li>\n            <li>\n              <Link to=\"/saved\">Saved</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path=\"/search\">\n            <Search />\n          </Route>\n          <Route path=\"/saved\">\n            <Saved />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}